name: Terraform Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'ec2/**'
      - 's3/**'
  workflow_dispatch:  # allow manual run from GitHub UI

jobs:
  ec2:
    name: EC2 Terraform Job
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'ec2') || github.event_name == 'push' && github.event.commits.*.modified | join(',') | contains('ec2/')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ec2

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  s3:
    name: S3 Terraform Job
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 's3') || github.event_name == 'push' && github.event.commits.*.modified | join(',') | contains('s3/')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./s3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
